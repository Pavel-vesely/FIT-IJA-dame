package ija.projekt.gui;

import ija.projekt.utils.Turn;
import ija.projekt.utils.SavedGame;
import ija.projekt.utils.DumpTurn;
import ija.projekt.basis.Desk;
import java.awt.*;
import javax.swing.*;
import java.io.File;
import java.util.ArrayList;
import javax.xml.bind.JAXBException;

/**
 * Implementace GameGui. Vytvari GUI pro prohlizeni zaznamu hry.
 *
 * @author Pavel Vesely, Ales Drevo
 */
public class ReplayGui extends GameGui {

    protected int actualTurn = 0;
    protected Turn[] turns;
    protected boolean end = false;

    /**
     * Konstruktor. Inicializuje ReplayGui a resi nacitani hry ze souboru.
     */
    public ReplayGui(File file) {
        super(file);
        this.desk = new Desk(this);
        initComponents();
        playedTurns = new ArrayList<>();
        recordPanel.setLayout(new BoxLayout(recordPanel, BoxLayout.Y_AXIS));
        this.board = new Board(this);
        board.setLayout(new GridLayout());
        boardPanel.setLayout(new GridLayout());
        boardPanel.add(board);
        board.setVisible(true);
        board.setFinished(true);

        if (file == null) {
            dispose();
        }

        SavedGame game = null;
        try {
            game = saveNLoad.load(file);
        } catch (JAXBException ex) {
            JOptionPane.showMessageDialog(this,
                    "Chyba načtení souboru",
                    "",
                    JOptionPane.ERROR_MESSAGE);
            dispose();
        }
        loadGame(game);

        desk.initiateDesk();
        refreshBoard();

        setLocation(200, 10);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boardPanel = new javax.swing.JPanel();
        recordPanel = new javax.swing.JPanel();
        stopButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        prevButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dame Hotseat");

        boardPanel.setMinimumSize(new java.awt.Dimension(600, 600));
        boardPanel.setPreferredSize(new java.awt.Dimension(600, 600));

        javax.swing.GroupLayout boardPanelLayout = new javax.swing.GroupLayout(boardPanel);
        boardPanel.setLayout(boardPanelLayout);
        boardPanelLayout.setHorizontalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        boardPanelLayout.setVerticalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout recordPanelLayout = new javax.swing.GroupLayout(recordPanel);
        recordPanel.setLayout(recordPanelLayout);
        recordPanelLayout.setHorizontalGroup(
            recordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );
        recordPanelLayout.setVerticalGroup(
            recordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        stopButton.setText("stop");
        stopButton.setMaximumSize(new java.awt.Dimension(60, 23));
        stopButton.setMinimumSize(new java.awt.Dimension(60, 23));
        stopButton.setPreferredSize(new java.awt.Dimension(60, 23));
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        nextButton.setText("další");
        nextButton.setMaximumSize(new java.awt.Dimension(80, 23));
        nextButton.setMinimumSize(new java.awt.Dimension(80, 23));
        nextButton.setPreferredSize(new java.awt.Dimension(80, 23));
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        prevButton.setText("předchozí");
        prevButton.setMaximumSize(new java.awt.Dimension(80, 23));
        prevButton.setMinimumSize(new java.awt.Dimension(80, 23));
        prevButton.setPreferredSize(new java.awt.Dimension(80, 23));
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(recordPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(prevButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recordPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(prevButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Spousti se pri stisku tlacitka stop. Skoci na zacatek zaznamu hry.
     */
    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        actualTurn = 0;
        desk.initiateDesk();
        refreshBoard();
        board.removeFocus();
    }//GEN-LAST:event_stopButtonActionPerformed

    /**
     * Spousti se pri stisku tlacitka dalsi. Provede 1 tah.
     */
    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        System.out.println(actualTurn);
        if (end) {
            return;
        }
        execTurn(turns[actualTurn], true);
        actualTurn++;
        endTurn();
        if (actualTurn >= turns.length) {
            actualTurn = turns.length - 1;
            end = true;
            JOptionPane.showMessageDialog(this, "Konec záznamu", "", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    /**
     * Spousti se pri stisku tlacitka predchozi. Skoci o 1 tah zpet.
     */
    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        end = false;
        if (actualTurn == 0) {
            desk.initiateDesk();
            refreshBoard();
            return;
        }
        actualTurn--;
        jumToTurn(actualTurn - 1);
        board.removeFocus();
    }//GEN-LAST:event_prevButtonActionPerformed

    /**
     * Nacte stav hry pri tahu cislo turnN.
     */
    public void jumToTurn(int turnN) {
        if (turnN >= turns.length) {
            JOptionPane.showMessageDialog(this, "Tah č." + turnN + " neexituje", "", JOptionPane.PLAIN_MESSAGE);
            return;
        }
        end = false;
        desk.initiateDesk();
        if (turnN < 0) {
            refreshBoard();
            return;
        }
        for (int i = 0; i <= turnN; i++) {
            execTurn(turns[i], false);
        }
        refreshBoard();
        endTurn();
    }

    /**
     * Prazdna implemenace madeTurn(). Nepouziva se.
     */
    @Override
    public void madeTurn() {
    }

    /**
     * Pretezeni metody GameGui.loadGame. Krome te jeste nacte tahy do atributu
     * turns.
     */
    @Override
    public void loadGame(SavedGame game) {
        super.loadGame(game);
        DumpTurn[] dumpTurns = game.getTurns();
        turns = new Turn[dumpTurns.length];
        for (int i = 0; i < dumpTurns.length; i++) {
            turns[i] = retrieveTurn(dumpTurns[i]);
        }
    }

    /**
     * Implementace addRecord. Prida zapis tahu do zaznamu hry.
     */
    @Override
    public void addRecord(Turn turn) {
        JLabel label;
        if (hasTurn) {
            label = new JLabel();
            label.setText(turnCnt + ".");
            recordPanel.add(label);
            label.setVisible(true);
        } else {
            turnCnt++;
            label = (JLabel) recordPanel.getComponent(recordPanel.getComponentCount() - 1);
        }
        String text;
        if (turn.getTake()) {
            text = label.getText() + " " + turn.getP0().getColumn() + "" + turn.getP0().getRow() + "x" + turn.getP1().getColumn() + "" + turn.getP1().getRow();
        } else {
            text = label.getText() + " " + turn.getP0().getColumn() + "" + turn.getP0().getRow() + "-" + turn.getP1().getColumn() + "" + turn.getP1().getRow();
        }
        label.setText(text);
    }

    /**
     * Implementace metody loadRecords. Nacte zaznam hry.
     */
    @Override
    public void loadRecords(Turn[] turns) {
        recordPanel.removeAll();
        hasTurn = true;
        for (Turn turn : turns) {
            addRecord(turn);
            hasTurn = !hasTurn;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boardPanel;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JPanel recordPanel;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
}
